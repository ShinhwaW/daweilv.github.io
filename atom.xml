<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>David 的个人博客 ๛ก(ｰ̀ωｰ́ก)</title>
  
  <subtitle>挖个坑，埋个土，数个一二三四五 ヾ(･ε･｀*)</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dawei.lv/"/>
  <updated>2018-06-27T06:01:20.656Z</updated>
  <id>http://dawei.lv/</id>
  
  <author>
    <name>David</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>免密码 SSH 登录 Ubuntu</title>
    <link href="http://dawei.lv/2018/06/27/%E5%85%8D%E5%AF%86%E7%A0%81-SSH-%E7%99%BB%E5%BD%95-Ubuntu/"/>
    <id>http://dawei.lv/2018/06/27/免密码-SSH-登录-Ubuntu/</id>
    <published>2018-06-27T05:52:30.000Z</published>
    <updated>2018-06-27T06:01:20.656Z</updated>
    
    <content type="html"><![CDATA[<p>由于工作的原因需要经常 SSH 登录服务器，每次登录服务器都要输入一次密码非常麻烦，还好 SSH 提供了免密码登录（公钥登录），设置好之后每次只需要 <code>ssh user@example.com</code> 回车就登录上去了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成密钥，一路回车</span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 上传公钥到目标服务器上</span><br><span class="line">ssh-copy-id user@example.com</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh user@example.com</span><br><span class="line"># 回车，咻，登录上了！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于工作的原因需要经常 SSH 登录服务器，每次登录服务器都要输入一次密码非常麻烦，还好 SSH 提供了免密码登录（公钥登录），设置好之后每次只需要 &lt;code&gt;ssh user@example.com&lt;/code&gt; 回车就登录上去了。&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
    
      <category term="linux" scheme="http://dawei.lv/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Progressive Web App 开发指南</title>
    <link href="http://dawei.lv/2018/06/27/Progressive-Web-App-%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/"/>
    <id>http://dawei.lv/2018/06/27/Progressive-Web-App-开发指南/</id>
    <published>2018-06-27T02:04:41.000Z</published>
    <updated>2018-06-27T03:51:57.035Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>施工中</p></blockquote><h3 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h3><ol><li>Service Workers 目前还没有被授予访问 cookie 的能力，via<a href="https://github.com/WICG/cookie-store/issues/37" target="_blank" rel="noopener">https://github.com/WICG/cookie-store/issues/37</a>、<a href="https://github.com/w3c/ServiceWorker/issues/707" target="_blank" rel="noopener">https://github.com/w3c/ServiceWorker/issues/707</a>、<a href="https://github.com/w3c/ServiceWorker/issues/837" target="_blank" rel="noopener">https://github.com/w3c/ServiceWorker/issues/837</a>。所以通过 session 鉴权的页面可能会出现异常。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;施工中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;坑点&quot;&gt;&lt;a href=&quot;#坑点&quot; class=&quot;headerlink&quot; title=&quot;坑点&quot;&gt;&lt;/a&gt;坑点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Service Workers 目前还没有被授予访问
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://dawei.lv/tags/javascript/"/>
    
      <category term="PWA" scheme="http://dawei.lv/tags/PWA/"/>
    
      <category term="Service Workers" scheme="http://dawei.lv/tags/Service-Workers/"/>
    
  </entry>
  
  <entry>
    <title>为你的阿里云服务器 ECS 升级 https</title>
    <link href="http://dawei.lv/2018/06/22/%E4%B8%BA%E4%BD%A0%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8-ECS-%E5%8D%87%E7%BA%A7-https/"/>
    <id>http://dawei.lv/2018/06/22/为你的阿里云服务器-ECS-升级-https/</id>
    <published>2018-06-22T08:59:14.000Z</published>
    <updated>2018-06-27T02:05:50.385Z</updated>
    
    <content type="html"><![CDATA[<p>本文是<a href="https://dawei.lv/2018/06/22/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA-Node-js-%E7%BA%BF%E4%B8%8A%E7%8E%AF%E5%A2%83/">从零搭建-Node-js-线上环境</a>的后续，因 https 比较独立，故单独写了一篇文章记录下。</p><p>阿里云现在提供了免费的 SSL 证书，申请过程略过，很简单，审核通过后下载证书文件。</p><a id="more"></a><p>在 /etc/nginx 下新建目录 cert，将证书 xxx.pem 和 xxx.key 上传到 /etc/nginx/cert 下，修改 <code>dev.example.com.conf</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name dev.example.com;</span><br><span class="line">    access_log /var/log/nginx/dev.example.com.access.log;</span><br><span class="line">    ssl on; #开启SSL</span><br><span class="line">    ssl_certificate     cert/xxx.pem;    #证书文件</span><br><span class="line">    ssl_certificate_key cert/xxx.key;    #私钥文件</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http://127.0.0.1:8888/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;        #监听80端口</span><br><span class="line">    server_name  dev.example.com; #监听的域名</span><br><span class="line">    return 301 https://dev.example.com$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test 下配置有没有问题</span></span><br><span class="line">nginx -t</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><p>重新访问 <code>http://dev.example.com</code> 看看是不是已经跳转到 <code>https://dev.example.com</code> 了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是&lt;a href=&quot;https://dawei.lv/2018/06/22/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA-Node-js-%E7%BA%BF%E4%B8%8A%E7%8E%AF%E5%A2%83/&quot;&gt;从零搭建-Node-js-线上环境&lt;/a&gt;的后续，因 https 比较独立，故单独写了一篇文章记录下。&lt;/p&gt;
&lt;p&gt;阿里云现在提供了免费的 SSL 证书，申请过程略过，很简单，审核通过后下载证书文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://dawei.lv/tags/ubuntu/"/>
    
      <category term="nginx" scheme="http://dawei.lv/tags/nginx/"/>
    
      <category term="https" scheme="http://dawei.lv/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>从零搭建 Node.js 线上环境</title>
    <link href="http://dawei.lv/2018/06/22/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA-Node-js-%E7%BA%BF%E4%B8%8A%E7%8E%AF%E5%A2%83/"/>
    <id>http://dawei.lv/2018/06/22/从零搭建-Node-js-线上环境/</id>
    <published>2018-06-22T03:59:47.000Z</published>
    <updated>2018-06-22T09:09:35.745Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文对应 Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-117-generic x86_64)</p></blockquote><h3 id="Step-1-更新-Ubuntu-源资源列表"><a href="#Step-1-更新-Ubuntu-源资源列表" class="headerlink" title="Step 1 更新 Ubuntu 源资源列表"></a>Step 1 更新 Ubuntu 源资源列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Step-2-安装-Node-js-版本管理工具-nvm"><a href="#Step-2-安装-Node-js-版本管理工具-nvm" class="headerlink" title="Step 2 安装 Node.js 版本管理工具 nvm"></a>Step 2 安装 Node.js 版本管理工具 nvm</h3><p>我们使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a> 作为 Node.js 的版本管理工具，它可以方便的切换 Node.js 版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure><p>看到提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">=&gt; Downloading nvm as script to <span class="string">'/root/.nvm'</span></span><br><span class="line"></span><br><span class="line">=&gt; Appending nvm <span class="built_in">source</span> string to /root/.bashrc</span><br><span class="line">=&gt; Appending bash_completion <span class="built_in">source</span> string to /root/.bashrc</span><br><span class="line">=&gt; Close and reopen your terminal to start using nvm or run the following to use it now:</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure><p>重新登录 Ubuntu。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br><span class="line"><span class="comment"># 显示版本号，证明安装 nvm 已经成功</span></span><br><span class="line">0.33.11</span><br></pre></td></tr></table></figure><h3 id="Step-3-安装-Node-js"><a href="#Step-3-安装-Node-js" class="headerlink" title="Step 3 安装 Node.js"></a>Step 3 安装 Node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出长期支持的版本</span></span><br><span class="line">nvm ls-remote --lts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择安装最新的长期支持版本</span></span><br><span class="line">nvm install v8.11.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 耐心等待下载，从阿里云上下载的时候速度还是挺慢的</span></span><br><span class="line">Downloading and installing node v8.11.3...</span><br><span class="line">Downloading https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz...</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">Computing checksum with sha256sum</span><br><span class="line">Checksums matched!</span><br><span class="line">Now using node v8.11.3 (npm v5.6.0)</span><br><span class="line">Creating default <span class="built_in">alias</span>: default -&gt; v8.11.3</span><br></pre></td></tr></table></figure><h3 id="Step-4-安装-nginx"><a href="#Step-4-安装-nginx" class="headerlink" title="Step 4 安装 nginx"></a>Step 4 安装 nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><p>安装好之后启动 nginx，访问服务器的 ip，应该可以看到 nginx 的欢迎页面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">service nginx start</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">service nginx stop</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">service nginx restart</span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><h3 id="Step-5-为不同-Node-js-服务配置不同域名"><a href="#Step-5-为不同-Node-js-服务配置不同域名" class="headerlink" title="Step 5 为不同 Node.js 服务配置不同域名"></a>Step 5 为不同 Node.js 服务配置不同域名</h3><p>假设我们需要配置 <code>www.example.com</code> 指向服务器上的 <code>http://127.0.0.1:8888</code> ， <code>dev.example.com</code> 指向服务器上的 <code>http://127.0.0.1:8800</code> 。</p><p>nginx 的默认安装目录是 /etc/nginx ，我们需要在 /etc/nginx/conf.d 下新建两个文件 <code>www.example.com.conf</code>、<code>dev.example.com.conf</code>。</p><p><code>www.example.com.conf</code> 内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.example.com;</span><br><span class="line">    access_log /var/log/nginx/www.example.com.access.log;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass    http://127.0.0.1:8888/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>dev.example.com.conf</code> 内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name dev.example.com;</span><br><span class="line">    access_log /var/log/nginx/dev.example.com.access.log;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http://127.0.0.1:8888/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test 下配置有没有问题</span></span><br><span class="line">nginx -t</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><p>分别访问下 www 站和 dev 站，看看是不是已经配置好啦！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文对应 Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-117-generic x86_64)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Step-1-更新-Ubuntu-源资源列表&quot;&gt;&lt;a href=&quot;#Step-1-更新-Ubuntu-源资源列表&quot; class=&quot;headerlink&quot; title=&quot;Step 1 更新 Ubuntu 源资源列表&quot;&gt;&lt;/a&gt;Step 1 更新 Ubuntu 源资源列表&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="http://dawei.lv/tags/ubuntu/"/>
    
      <category term="nginx" scheme="http://dawei.lv/tags/nginx/"/>
    
      <category term="node.js" scheme="http://dawei.lv/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>npm 版本号主要注意的规则</title>
    <link href="http://dawei.lv/2018/06/21/npm-%E7%89%88%E6%9C%AC%E5%8F%B7%E4%B8%BB%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E8%A7%84%E5%88%99/"/>
    <id>http://dawei.lv/2018/06/21/npm-版本号主要注意的规则/</id>
    <published>2018-06-21T11:41:27.000Z</published>
    <updated>2018-06-22T02:02:02.450Z</updated>
    
    <content type="html"><![CDATA[<p>一直都觉得 npm 版本号没什么好注意的，直到今天掉到坑里了，爬了一下午才爬出来，特作此文，加深印象，提醒自己。</p><a id="more"></a><p>某日，用的好好的 Webpack 突然打出来的包某个 entry 不能用了，一直报错 <code>Uncaught TypeError: Cannot read property &#39;call&#39; of undefined</code> 。代码一顿分析没找到原因，去 Webpack Issue 上搜了一把，还真有不少遇到相同问题的(<a href="https://github.com/webpack/webpack/issues/7499" target="_blank" rel="noopener">7499</a>、<a href="https://github.com/webpack/webpack/issues/7425" target="_blank" rel="noopener">7425</a>)。官方维护人员给出的反馈是暂未定位到具体原因，翻看了下面的反馈，有人指出使用 <code>4.9.2</code> 以上的版本都会有问题。</p><p>So，<code>cnpm i -D webpack@4.9.2</code> 尝试安装了 <code>4.9.2</code> 的版本，重新打包，问题不再重现，问题解决，提交新的 package.json，美滋滋。</p><p>But，还没安稳多久。同事 Kim 表示自己的项目打出来的包还是不正常。怎么会这样呢，我们俩的项目都是一样的，代码都是最新的。于是我重新打包了一次项目，没能重现。于是 <code>rm -rf node_modules</code>，重新 <code>cnpm i</code>，自信打包。</p><p>问题复现…What？！怎么会？包不都是一样的吗？笔者一顿猛删 node_modules，下载了各种 webpack 版本，各种 <code>cnpm i</code>，发现打包时好时坏，怎么回事呢？这时一道灵光闪过，会不会是 node_modules 下的包版本不一致呢？仔细对比了同事的 node_modules 发现，他的 webpack 居然是 <code>4.12.0</code> 的！为什么呢？笔者突然想起来，package.json 里面的配置是：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // ...</span><br><span class="line">  "devDependencies": &#123;</span><br><span class="line">    // ...</span><br><span class="line">    "webpack": "^4.9.0"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意这个 <code>^</code> ，罪魁祸首就是这个 <code>^</code>！它的含义是 <code>不低于当前版本主版本号的最新版本</code>。也就是说，如果当前 webpack 最高版本 4.12.0 ，那么你的 <code>^4.9.0</code> 会去下载 4.12.0，也就是当前的问题版本，而不是 4.9.0！这也解释了为什么我主动 <code>cnpm i -D webpack@4.9.2</code> 的时候打包正常，而删除 node_modules 重新打包就会出现问题，两种操作下下来的 webpack 版本不一致嘛！</p><p>问题定位出来后，我们修改了 package.json，在官方修复该问题之前先锁定版本号：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // ...</span><br><span class="line">    "devDependencies": &#123;</span><br><span class="line">        // ...</span><br><span class="line"><span class="deletion">-        "webpack": "^4.9.0",</span></span><br><span class="line"><span class="addition">+        "webpack": "4.9.0",</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新安装&amp;打包，问题不再重现，bug fix！</p><p>附 npmjs 官网对语义化符号的说明 <a href="https://semver.npmjs.com/" target="_blank" rel="noopener">https://semver.npmjs.com/</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直都觉得 npm 版本号没什么好注意的，直到今天掉到坑里了，爬了一下午才爬出来，特作此文，加深印象，提醒自己。&lt;/p&gt;
    
    </summary>
    
    
      <category term="npm" scheme="http://dawei.lv/tags/npm/"/>
    
      <category term="bug 定位" scheme="http://dawei.lv/tags/bug-%E5%AE%9A%E4%BD%8D/"/>
    
  </entry>
  
  <entry>
    <title>使用 Webpack4.0 打包组件库并发布到 npm</title>
    <link href="http://dawei.lv/2018/06/08/webpack-%E6%89%93%E5%8C%85%E7%BB%84%E4%BB%B6%E5%BA%93%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0-npm/"/>
    <id>http://dawei.lv/2018/06/08/webpack-打包组件库并发布到-npm/</id>
    <published>2018-06-08T07:51:03.000Z</published>
    <updated>2018-06-22T02:01:50.325Z</updated>
    
    <content type="html"><![CDATA[<p>本文将会介绍如何将自己写的组件库打包成第三方库，发布到 npm 上，同时支持在原生 js / React/ Vue 下使用。Webpack4 的升级指南可以参考下 <a href="https://dawei.lv/2018/05/21/Webpack4-0-%E5%8D%87%E7%BA%A7%E9%85%8D%E7%BD%AE/">Webpack4.0 升级配置</a>，本文不做赘述。</p><a id="more"></a><h2 id="使用-Webpack4-0-打包"><a href="#使用-Webpack4-0-打包" class="headerlink" title="使用 Webpack4.0 打包"></a>使用 Webpack4.0 打包</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/index.js</span></span><br><span class="line">exports <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">Tree</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hello Tree'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设我们有上面的 index.js 文件，我们想要把打它打包成一个 tree.js 和一个 tree.min.js 包，并且我希望我既可以通过 <code>&lt;script src=&quot;../dist/tree.js&quot;&gt;&lt;/script&gt;</code> 直接 <code>new Tree()</code> ，又可以通过 <code>import Tree from &#39;tree&#39;</code> 或 <code>let Tree = require(&#39;tree&#39;)</code> 引入，怎么做呢？这就要使用 Webpack 来处理了。</p><p>Webpack 不仅可以打包 React / Vue 相关的项目工程，也可以单独打包 js 组件。先来看下入口与出口的配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  mode: <span class="string">"none"</span>,</span><br><span class="line">  entry: &#123;</span><br><span class="line">    tree: <span class="string">"./src/index.js"</span>,</span><br><span class="line">    <span class="string">"tree.min"</span>: <span class="string">"./src/index.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">"[name].js"</span>,</span><br><span class="line">    libraryExport: <span class="string">"default"</span>,</span><br><span class="line">    library: <span class="string">"Tree"</span>,</span><br><span class="line">    libraryTarget: <span class="string">"umd"</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="mode"><a href="#mode" class="headerlink" title="mode"></a>mode</h4><p>Webpack4.0 会在默认情况下开启 <code>mode=production</code>，这会无差别的压缩我们的 <code>tree.js</code> 和 <code>tree.min.js</code>，这不是我们想要的，禁用它。</p><h4 id="entry"><a href="#entry" class="headerlink" title="entry"></a>entry</h4><p><code>entry</code> 里面我们配置两个入口 <code>tree</code>、<code>&quot;tree.min&quot;</code>，让 webpack 可以打包出两个文件，我们可以针对两个入口做不同的处理。</p><h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><p><code>output</code> 的 <code>filename</code> 表示打包出来文件名叫什么。<code>libraryExport=default</code> 表示打包出来的组件直接对外暴露 <code>default</code> 属性，否则我们调用的时候需要 <code>new Tree.default()</code>，这不是我们希望的调用方式。<code>library=Tree</code> 表示对外暴露的组件叫什么，如果这个地方修改成了 <code>library=Bar</code>，那我们调用的时候就是 <code>new Bar()</code>。<code>libraryTarget=umd</code> 表示采用 UMD (Universal Module Definition) 的方式打包 js，同时支持在 CommonJS、AMD 和全局变量使用。</p><h4 id="optimization"><a href="#optimization" class="headerlink" title="optimization"></a>optimization</h4><p>怎么对 <code>tree.min.js</code> 压缩，但不对 <code>tree.js</code> 压缩呢？请看下面的配置部分：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line">  optimization: &#123;</span><br><span class="line">        minimize: <span class="literal">true</span>,</span><br><span class="line">        minimizer: [</span><br><span class="line">            <span class="keyword">new</span> UglifyJSPlugin(&#123;</span><br><span class="line">                include: <span class="regexp">/\.min\.js$/</span>,</span><br><span class="line">            &#125;),</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>通过 <code>include</code> 设置只压缩 <code>min.js</code> 结尾的文件，是不是很简单。这样我们就得到了 <code>dist/tree.min.js</code>、<code>dist/tree.js</code> 两个文件。下面我们开始发布代码到 npm。</p><h2 id="发布组件库到-npm-上"><a href="#发布组件库到-npm-上" class="headerlink" title="发布组件库到 npm 上"></a>发布组件库到 npm 上</h2><h4 id="发布之前"><a href="#发布之前" class="headerlink" title="发布之前"></a>发布之前</h4><p>发布之前，还有件事需要做，在项目根目录新建 <code>index.js</code>，添加内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">"production"</span>) &#123;</span><br><span class="line">  <span class="built_in">module</span>.exports = <span class="built_in">require</span>(<span class="string">"./dist/tree.min.js"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">module</span>.exports = <span class="built_in">require</span>(<span class="string">"./dist/tree.js"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>package.json</code> 的 <code>main</code> 为 <code>index.js</code>，指定我们通过 import / require 的时候入口文件位置。</p><h4 id="注册-npm"><a href="#注册-npm" class="headerlink" title="注册 npm"></a>注册 npm</h4><p>想要发布代码到 npm 上，需要先注册一个账号，你可以直接打开<a href="https://www.npmjs.com/signup" target="_blank" rel="noopener">官网注册</a>，这里我们选择更 cooooool 的方式注册。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm adduser</span><br></pre></td></tr></table></figure><p>依次输入 Username、Password、Email 完成注册。</p><h4 id="登录-npm"><a href="#登录-npm" class="headerlink" title="登录 npm"></a>登录 npm</h4><p>注册好账号之后需要在 Terminal 上登录 npm，在 Terminal 中直接注册的同学就不需用登录了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure><p>输入 Username、Password、Email 完成登录。</p><h4 id="发布到-npm"><a href="#发布到-npm" class="headerlink" title="发布到 npm"></a>发布到 npm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><p>发布的包名就是你的 <code>package.json</code> 的 <code>name</code> 和 <code>version</code>。有冲突的话需要换一个哦。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>本文其实是笔者近期在开源的一个树形选择控件 <a href="https://github.com/daweilv/treejs" target="_blank" rel="noopener">@widgetjs/tree</a> 摸索出来的打包经验总结。为了简化配置，突出重点，省略了一些生产环境需要添加的较为繁琐的细节，正式的生产模式配置可以在 <a href="https://github.com/daweilv/treejs" target="_blank" rel="noopener">github</a> 上找到，也欢迎使用，多多提出意见。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将会介绍如何将自己写的组件库打包成第三方库，发布到 npm 上，同时支持在原生 js / React/ Vue 下使用。Webpack4 的升级指南可以参考下 &lt;a href=&quot;https://dawei.lv/2018/05/21/Webpack4-0-%E5%8D%87%E7%BA%A7%E9%85%8D%E7%BD%AE/&quot;&gt;Webpack4.0 升级配置&lt;/a&gt;，本文不做赘述。&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://dawei.lv/tags/webpack/"/>
    
      <category term="npm" scheme="http://dawei.lv/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>阿里云RDS数据恢复方法</title>
    <link href="http://dawei.lv/2018/05/30/%E9%98%BF%E9%87%8C%E4%BA%91RDS%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://dawei.lv/2018/05/30/阿里云RDS数据恢复方法/</id>
    <published>2018-05-30T05:05:05.000Z</published>
    <updated>2018-06-22T02:01:08.825Z</updated>
    
    <content type="html"><![CDATA[<p>某天，公司的数据库被某运维同学用自动化脚本批量改了一批数据，并且改出问题来了，需要恢复修改的数据。由于我司采用了阿里云的云数据库 RDS，于是我登录了公司的阿里云控制台进行了恢复操作，操作过程总结如下，供需要的同学参考。</p><a id="more"></a><h4 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h4><p>依次访问菜单“云计算基础服务”&gt;“云数据库 RDS 版” &gt; “实例列表”，选择要恢复的实例 A，点击“管理”，选择“备份恢复”。可以看到 RDS 默认帮我们备份了 1 天前、4 天前、6 天前的数据。</p><h4 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h4><p>点击“克隆实例”，选择“按量付费”，还原方式选择按“备份集”，备份集选择一天前的那个备份，规格这里可以选择最低的 “1 核 1GB”，因为我们恢复完后就会释放掉这个实例，用不着选特别好的。然后点击“立即购买”。购买完成后需要等待 5 分钟左右，RDS 创建实例还是挺慢的。</p><h4 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h4><p>新的克隆实例创建好了之后，可以在“云计算基础服务”&gt;“云数据库 RDS 版”&gt;“实例列表”下看到。我们选择新创建的实例，点击“管理”，选择“登录数据库”。输入用户名和密码，点击登录。</p><h4 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h4><p>登录后就可以看到一天前的数据库的状态，这时候就根据出现的问题，具体问题具体分析，写出恢复的 SQL 语句了。</p><p>我这次恢复的过程中，发现 1 天前的那个备份也被污染了，于是我又创建了 4 天前的实例，两份数据加一起恢复了现网数据。</p><p>给运维同学提个醒，最好不要使用自动化脚本刷现网后台，出现问题危害特别大、破坏性极强、恢复困难..</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;某天，公司的数据库被某运维同学用自动化脚本批量改了一批数据，并且改出问题来了，需要恢复修改的数据。由于我司采用了阿里云的云数据库 RDS，于是我登录了公司的阿里云控制台进行了恢复操作，操作过程总结如下，供需要的同学参考。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://dawei.lv/tags/MySQL/"/>
    
      <category term="阿里云" scheme="http://dawei.lv/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="RDS" scheme="http://dawei.lv/tags/RDS/"/>
    
  </entry>
  
  <entry>
    <title>Webpack4.0 升级配置</title>
    <link href="http://dawei.lv/2018/05/21/Webpack4-0-%E5%8D%87%E7%BA%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://dawei.lv/2018/05/21/Webpack4-0-升级配置/</id>
    <published>2018-05-21T02:00:35.000Z</published>
    <updated>2018-05-30T12:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文基于 webpack 4.8.1</p></blockquote><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>webpack 彪版本号的速度真是飞快，4.0 发布没多久上去看的时候才 4.1.*，现在已经刷到 4.8.1 了，给人一种“我版本号很高了，可以安心升级了”的感觉，然而坑依然很多…尤其是 API 文档，到处可见 3.0 的陈旧信息。<a href="https://webpack.js.org/guides/code-splitting/" target="_blank" rel="noopener">Code Splitting</a> 章节点进去依然在讲 CommonsChunkPlugin ，<a href="https://webpack.js.org/plugins/commons-chunk-plugin/" target="_blank" rel="noopener">CommonsChunkPlugin</a> 点进去提示去看 <a href="https://webpack.js.org/plugins/split-chunks-plugin/" target="_blank" rel="noopener">SplitChunksPlugin</a>，看文档的时候经常会迷失自我，心累…好了，吐槽完毕，下面是正文。需要直接复制粘贴的同学直接拉到<a href="#Demo">最后</a>~</p><a id="more"></a><h2 id="4-0-与-3-0-的区别"><a href="#4-0-与-3-0-的区别" class="headerlink" title="4.0 与 3.0 的区别"></a>4.0 与 3.0 的区别</h2><h4 id="mode"><a href="#mode" class="headerlink" title="mode"></a>mode</h4><p>webpack4.0 新增了 <code>mode</code> 的概念, <code>mode</code> 可以为 <code>development</code>、<code>production</code> 和 <code>none</code>。</p><p><code>development</code> 帮我们设置了 <code>process.env.NODE_ENV=development</code>，并添加了 <code>NamedModulesPlugin</code> 插件。<code>process.env.NODE_ENV=development</code> 可以用来显示一些在开发模式下才显示的 debug 信息，请注意这个 <code>NODE_ENV</code> 不能在 <code>webpack.config.js</code> 中使用，只能在你的源文件中使用。想要在 <code>webpack.config.js</code> 中也生效，需要在 package.json 的 script 脚本前添加 <code>NODE_ENV=development</code>，如 <code>NODE_ENV=development webpack --config webpack.dev.js</code>。<code>NamedModulesPlugin</code> 是在开启 HMR 的时候使用的插件。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// webpack.development.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line"><span class="addition">+ mode: 'development'</span></span><br><span class="line"><span class="deletion">- plugins: [</span></span><br><span class="line"><span class="deletion">-   new webpack.NamedModulesPlugin(),</span></span><br><span class="line"><span class="deletion">-   new webpack.DefinePlugin(&#123; "process.env.NODE_ENV": JSON.stringify("development") &#125;),</span></span><br><span class="line"><span class="deletion">- ]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>production</code> 帮我们设置了 <code>process.env.NODE_ENV=production</code>，并添加了 <code>UglifyJsPlugin</code>、<code>ModuleConcatenationPlugin</code>、<code>NoEmitOnErrorsPlugin</code> 等插件，在设置了 <code>sideEffects=false</code> 之后可以实现未引用代码删除的功能。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// webpack.production.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line"><span class="addition">+  mode: 'production',</span></span><br><span class="line"><span class="deletion">-  plugins: [</span></span><br><span class="line"><span class="deletion">-    new UglifyJsPlugin(/* ... */),</span></span><br><span class="line"><span class="deletion">-    new webpack.DefinePlugin(&#123; "process.env.NODE_ENV": JSON.stringify("production") &#125;),</span></span><br><span class="line"><span class="deletion">-    new webpack.optimize.ModuleConcatenationPlugin(),</span></span><br><span class="line"><span class="deletion">-    new webpack.NoEmitOnErrorsPlugin()</span></span><br><span class="line"><span class="deletion">-  ]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="optimization"><a href="#optimization" class="headerlink" title="optimization"></a>optimization</h4><p>另一个区别在于引入了 <code>optimization</code> 的概念，<code>optimization.minimizer</code> 和 <code>optimization.splitChunks</code> 是需要我们关注的两个配置。</p><p><code>optimization.minimizer</code> 用于指定 webpack 使用哪个代码压缩插件，默认为 <code>new webpack.optimize.UglifyJsPlugin</code>，推荐更换为 <code>UglifyJSPlugin</code>。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+const UglifyJSPlugin = require('uglifyjs-webpack-plugin');</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  //...</span><br><span class="line">  optimization: &#123;</span><br><span class="line">    minimizer: [</span><br><span class="line"><span class="deletion">-     new webpack.optimize.UglifyJsPlugin(&#123;&#125;)</span></span><br><span class="line"><span class="addition">+     new UglifyJSPlugin(&#123;&#125;)</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>optimization.splitChunks</code> 替代了 3.0 的 CommonsChunkPlugin，实现公共代码抽取。具体 API 参见<a href="https://webpack.js.org/plugins/split-chunks-plugin/" target="_blank" rel="noopener">SplitChunksPlugin</a>。划几个重点，webpack 生成已经给大部分用户提供了默认的设置，<code>mode=production</code> 就已经带了这个优化，BUT!! 默认开启的代码分割只对异步加载的代码有效，也就是如果你是多个入口的配置，那么你的 react、react-dom、react-router 等公共库以及你的 common 代码都会被重复打包进多个入口里。emmmmm，这叫什么开箱即用嘛，还是我们自己动手吧。</p><p>首先，<code>optimization.splitChunks.chunks</code> 设置为 <code>all</code>，使得 <code>async</code> 异步加载的代码和 <code>initial</code> 初始化的代码都会被抽取。<code>optimization.splitChunks.cacheGroups</code> 添加 <code>commons</code> 和 <code>vendors</code> （如下）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  optimization: &#123;</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      chunks: <span class="string">"all"</span>,</span><br><span class="line">      cacheGroups: &#123;</span><br><span class="line">        commons: &#123;</span><br><span class="line">          name: <span class="string">"commons"</span>,</span><br><span class="line">          test: <span class="regexp">/src[\/]/</span>,</span><br><span class="line">          chunks: <span class="string">"initial"</span>,</span><br><span class="line">          priority: <span class="number">2</span>,</span><br><span class="line">          minChunks: <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        vendors: &#123;</span><br><span class="line">          name: <span class="string">"vendors"</span>,</span><br><span class="line">          test: <span class="regexp">/node_modules/</span>,</span><br><span class="line">          chunks: <span class="string">"initial"</span>,</span><br><span class="line">          priority: <span class="number">10</span>,</span><br><span class="line">          minChunks: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这里的 <code>name</code> 指定你要抽取出来的 js 的文件名，<code>test</code> 字段用来筛选你要匹配的代码，<code>minChunks:2</code> 表示代码被引用 2 次及以上就会被抽取出来，<code>commons</code> 实现抽取你的 <code>src</code> 文件夹下的公共代码，<code>vendors</code> 则用于抽取 node_modules 下的公共库。下面我们需要把我们抽取出来的 <code>commons.js</code> 和 <code>vendors.js</code> 添加到 HtmlWebpackPlugin ，以实现打包出来的 html 文件引用 <code>commons.js</code> 和 <code>vendors.js</code>。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new HtmlWebpackPlugin(&#123;</span><br><span class="line">    //...</span><br><span class="line"><span class="deletion">-   chunks: 'index',</span></span><br><span class="line"><span class="addition">+   chunks: ['vendors', 'commons', 'index'],</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>到笔者发布文章为止，HtmlWebpackPlugin 还不支持添加动态名称的 cacheGroups，无法将未明确指定 name 的 vendors~chunk-a~chunk-b.js 之类的 js 打包进代码中，不过可以看到<a href="https://github.com/jantimon/html-webpack-plugin/pull/945" target="_blank" rel="noopener">相关的代码</a>已经快要出来了。之后就可以实现更精细的代码分割打包了。</p></blockquote><h4 id="plugins"><a href="#plugins" class="headerlink" title="plugins"></a>plugins</h4><p>使用 <a href="https://github.com/webpack-contrib/mini-css-extract-plugin" target="_blank" rel="noopener">mini-css-extract-plugin</a> 替代 <code>extract-text-webpack-plugin</code>抽取 css 到单独文件中，使用 <a href="https://github.com/NMFR/optimize-css-assets-webpack-plugin" target="_blank" rel="noopener">optimize-css-assets-webpack-plugin</a> 对 css 进行压缩处理。</p><p><code>optimize-css-assets-webpack-plugin</code> 在使用的时候强烈推荐设置 <code>isSafe = true</code>，避免 z-index 被修改的<a href="https://github.com/NMFR/optimize-css-assets-webpack-plugin/issues/28" target="_blank" rel="noopener">问题</a>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> OptimizeCSSAssetsPlugin(&#123;</span><br><span class="line">  cssProcessorOptions: &#123;</span><br><span class="line">    isSafe: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><a href="https://github.com/daweilv/webpack4-demo" target="_blank" rel="noopener">webpack4-demo</a> 是笔者整理的 webpack4.0 demo，详细的 webpack 配置可以在这里找到。</p><ol><li>支持开发/生产模式</li><li>支持开发模式下 HMR</li><li>支持代码分割、代码混淆压缩</li><li>支持未引用代码删除</li><li>支持 less、autoprefixer</li><li>支持单/多入口</li><li>支持查看打包各个模块占用大小</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文基于 webpack 4.8.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;吐槽&quot;&gt;&lt;a href=&quot;#吐槽&quot; class=&quot;headerlink&quot; title=&quot;吐槽&quot;&gt;&lt;/a&gt;吐槽&lt;/h2&gt;&lt;p&gt;webpack 彪版本号的速度真是飞快，4.0 发布没多久上去看的时候才 4.1.*，现在已经刷到 4.8.1 了，给人一种“我版本号很高了，可以安心升级了”的感觉，然而坑依然很多…尤其是 API 文档，到处可见 3.0 的陈旧信息。&lt;a href=&quot;https://webpack.js.org/guides/code-splitting/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Code Splitting&lt;/a&gt; 章节点进去依然在讲 CommonsChunkPlugin ，&lt;a href=&quot;https://webpack.js.org/plugins/commons-chunk-plugin/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CommonsChunkPlugin&lt;/a&gt; 点进去提示去看 &lt;a href=&quot;https://webpack.js.org/plugins/split-chunks-plugin/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SplitChunksPlugin&lt;/a&gt;，看文档的时候经常会迷失自我，心累…好了，吐槽完毕，下面是正文。需要直接复制粘贴的同学直接拉到&lt;a href=&quot;#Demo&quot;&gt;最后&lt;/a&gt;~&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="http://dawei.lv/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>在 Terminal 中打开 Sublime</title>
    <link href="http://dawei.lv/2017/05/04/%E5%9C%A8-Terminal-%E4%B8%AD%E6%89%93%E5%BC%80-Sublime/"/>
    <id>http://dawei.lv/2017/05/04/在-Terminal-中打开-Sublime/</id>
    <published>2017-05-04T01:49:08.000Z</published>
    <updated>2018-05-30T06:07:19.753Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open  ~/.bash_profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> sb=<span class="string">"open -a /Applications/Sublime\ Text.app"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><p><code>sb.</code> 打开当前文件夹<br><code>sb file</code> 打开当前已存在文件或文件夹</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="shell" scheme="http://dawei.lv/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>javascript audio 对象常用事件</title>
    <link href="http://dawei.lv/2017/04/25/javascript-audio-%E5%AF%B9%E8%B1%A1%E5%B8%B8%E7%94%A8%E4%BA%8B%E4%BB%B6/"/>
    <id>http://dawei.lv/2017/04/25/javascript-audio-对象常用事件/</id>
    <published>2017-04-25T14:56:19.000Z</published>
    <updated>2018-05-30T06:07:44.064Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做一个媒体播放器，集成了图片+音频播放模式和视频播放模式，研究了下 js audio 对象的事件，整理了相关事件及触发顺序。</p><p>音频的初始加载事件顺序：依次触发 <code>onloadstart</code>、<code>onprogress</code>、<code>onsuspend</code>，然后 <code>onprogress</code>、<code>onsuspend</code> 交替触发，直到触发 <code>ondurationchange</code>、<code>onloadedmetadata</code>、<code>onloadeddata</code>、<code>oncanplay</code>、<code>oncanplaythrough</code>，加载完成。</p><p>点击播放后触发事件顺序：<br><code>onplay</code>、<code>onplaying</code>、<code>ontimeupdate</code>，播放控件开始缓冲部分音频文件<code>onprogress</code>，缓冲足够多的音频片段后触发<code>onsuspend</code>，当缓冲即将播放完后又触发<code>onprogress</code>、<code>onsuspend</code>，依次循环直到音频全部缓冲完毕。</p><p>音频播放完毕后触发：<br><code>onpause</code>、<code>onended</code></p><p>暂停播放控件时触发：<br><code>onpause</code></p><p>从暂停恢复播放后触发：<br><code>onplay</code>、<code>onplaying</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在做一个媒体播放器，集成了图片+音频播放模式和视频播放模式，研究了下 js audio 对象的事件，整理了相关事件及触发顺序。&lt;/p&gt;
&lt;p&gt;音频的初始加载事件顺序：依次触发 &lt;code&gt;onloadstart&lt;/code&gt;、&lt;code&gt;onprogress&lt;/code
      
    
    </summary>
    
    
      <category term="js" scheme="http://dawei.lv/tags/js/"/>
    
      <category term="html5" scheme="http://dawei.lv/tags/html5/"/>
    
      <category term="audio" scheme="http://dawei.lv/tags/audio/"/>
    
  </entry>
  
  <entry>
    <title>javascript 正则表达式的那些坑</title>
    <link href="http://dawei.lv/2016/12/09/javascript-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91/"/>
    <id>http://dawei.lv/2016/12/09/javascript-正则表达式的那些坑/</id>
    <published>2016-12-09T02:51:29.000Z</published>
    <updated>2018-05-30T06:07:19.753Z</updated>
    
    <content type="html"><![CDATA[<p>js 正则，匹配多行的<br><code>[.\n]</code> 不能拿来匹配多行， <code>[]</code> 里的 <code>.</code> 会被解析成<code>标点符号</code>，而不是任意字符</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;js 正则，匹配多行的&lt;br&gt;&lt;code&gt;[.\n]&lt;/code&gt; 不能拿来匹配多行， &lt;code&gt;[]&lt;/code&gt; 里的 &lt;code&gt;.&lt;/code&gt; 会被解析成&lt;code&gt;标点符号&lt;/code&gt;，而不是任意字符&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="RegExp" scheme="http://dawei.lv/tags/RegExp/"/>
    
  </entry>
  
  <entry>
    <title>Terminal 设置 path、alias</title>
    <link href="http://dawei.lv/2016/12/09/Terminal-%E8%AE%BE%E7%BD%AE-path%E3%80%81alias/"/>
    <id>http://dawei.lv/2016/12/09/Terminal-设置-path、alias/</id>
    <published>2016-12-09T02:48:56.000Z</published>
    <updated>2018-05-30T06:07:19.819Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bash_profile</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias rn=<span class="string">'react-native'</span></span><br><span class="line">alias ro=<span class="string">'react-native run-ios'</span></span><br><span class="line">export PATH=$PATH:/usr/local/mysql/bin</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esc</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq!</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="shell" scheme="http://dawei.lv/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>vi 编辑器命令备忘</title>
    <link href="http://dawei.lv/2016/12/09/vi-%E7%BC%96%E8%BE%91%E5%99%A8%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98/"/>
    <id>http://dawei.lv/2016/12/09/vi-编辑器命令备忘/</id>
    <published>2016-12-09T02:44:09.000Z</published>
    <updated>2018-05-30T06:07:19.753Z</updated>
    
    <content type="html"><![CDATA[<h3 id="打开一个文件"><a href="#打开一个文件" class="headerlink" title="打开一个文件"></a>打开一个文件</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vi</span>  ~/.bash_profile</span><br></pre></td></tr></table></figure><h3 id="跳到行首"><a href="#跳到行首" class="headerlink" title="跳到行首"></a>跳到行首</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="跳到行尾"><a href="#跳到行尾" class="headerlink" title="跳到行尾"></a>跳到行尾</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shift + <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;打开一个文件&quot;&gt;&lt;a href=&quot;#打开一个文件&quot; class=&quot;headerlink&quot; title=&quot;打开一个文件&quot;&gt;&lt;/a&gt;打开一个文件&lt;/h3&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="shell" scheme="http://dawei.lv/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>记一次 radio 标签 onblur 异常的分析过程</title>
    <link href="http://dawei.lv/2016/12/09/%E8%AE%B0%E4%B8%80%E6%AC%A1-radio-%E6%A0%87%E7%AD%BE-onblur-%E5%BC%82%E5%B8%B8%E7%9A%84%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B/"/>
    <id>http://dawei.lv/2016/12/09/记一次-radio-标签-onblur-异常的分析过程/</id>
    <published>2016-12-09T02:30:34.000Z</published>
    <updated>2018-06-22T02:01:18.182Z</updated>
    
    <content type="html"><![CDATA[<p>问题版本：Safari 10.0 (12602.1.50.0.10)</p><h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>目标版本浏览器在鼠标点击 radio 的小圆点后再点击其他区域并不会触发 onblur 事件。问题可以重现，在 Chrome 下无此问题。</p><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">onblur</span>=<span class="string">"alert('blur')"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>我们先找到了 w3 上关于 blur 事件的定义：<a href="https://www.w3.org/TR/uievents/#event-type-blur" target="_blank" rel="noopener">https://www.w3.org/TR/uievents/#event-type-blur</a></p><blockquote><p>A user agent MUST dispatch this event when an event target loses focus. The focus MUST be taken from the element before the dispatch of this event type. This event type is similar to focusout, but is dispatched after focus is shifted, and does not bubble.</p></blockquote><p>也就是说，onblur 事件未触发是因为该控件在此之前并没有被 focus ，所以我们在点击 radio 控件的时候监听点击事件，在点击的时候主动触发一下设置 focus</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">onblur</span>=<span class="string">"alert('blur')"</span> <span class="attr">onclick</span>=<span class="string">"this.focus()"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>问题解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;问题版本：Safari 10.0 (12602.1.50.0.10)&lt;/p&gt;
&lt;h2 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h2&gt;&lt;p&gt;目标版本浏览器在鼠标点击 radio 的小圆点后再点击其他区域并不会触发 onblur 事件。问题可以重现，在 Chrome 下无此问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="html5" scheme="http://dawei.lv/tags/html5/"/>
    
      <category term="radio" scheme="http://dawei.lv/tags/radio/"/>
    
  </entry>
  
  <entry>
    <title>常用 MySQL 数据库语句</title>
    <link href="http://dawei.lv/2016/12/09/%E5%B8%B8%E7%94%A8-MySQL-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E5%8F%A5/"/>
    <id>http://dawei.lv/2016/12/09/常用-MySQL-数据库语句/</id>
    <published>2016-12-09T02:02:51.000Z</published>
    <updated>2018-05-30T06:08:10.888Z</updated>
    
    <content type="html"><![CDATA[<h4 id="建表语句"><a href="#建表语句" class="headerlink" title="建表语句"></a>建表语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'ID'</span>,</span><br><span class="line">  <span class="string">`login`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'账号'</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">  <span class="string">`nickname`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'昵称'</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span>,</span><br><span class="line">  <span class="string">`phoneCode`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="string">'86'</span> <span class="keyword">COMMENT</span> <span class="string">'国际电话区号'</span>,</span><br><span class="line">  <span class="string">`phone`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'手机'</span>,</span><br><span class="line">  <span class="string">`create_at`</span> <span class="built_in">varchar</span>(<span class="number">24</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建日期'</span>,</span><br><span class="line">  <span class="string">`create_by`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建者'</span>,</span><br><span class="line">  <span class="string">`update_at`</span> <span class="built_in">varchar</span>(<span class="number">24</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'修改日期'</span>,</span><br><span class="line">  <span class="string">`update_by`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'修改者'</span>,</span><br><span class="line">  <span class="string">`delete_at`</span> <span class="built_in">varchar</span>(<span class="number">24</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'删除日期'</span>,</span><br><span class="line">  <span class="string">`delete_by`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'删除者'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`login`</span> (<span class="string">`login`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'用户表’;</span></span><br></pre></td></tr></table></figure><h4 id="增加字段"><a href="#增加字段" class="headerlink" title="增加字段"></a>增加字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">`qq`</span> <span class="built_in">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'QQ'</span>; <span class="comment">-- 增加一个 qq 字段</span></span><br></pre></td></tr></table></figure><h4 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">COLUMN</span> <span class="string">`email`</span>; <span class="comment">-- 删除一个 email 字段</span></span><br></pre></td></tr></table></figure><h4 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> <span class="string">`login`</span>; <span class="comment">-- 删除 login 索引</span></span><br></pre></td></tr></table></figure><h4 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a>修改字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span></span><br><span class="line"><span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> <span class="string">`nickname`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'昵称'</span>; <span class="comment">-- 修改 nickname 字段长度为 varchar(20)</span></span><br></pre></td></tr></table></figure><h4 id="修改字段名称"><a href="#修改字段名称" class="headerlink" title="修改字段名称"></a>修改字段名称</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span></span><br><span class="line"><span class="keyword">CHANGE</span> <span class="keyword">COLUMN</span> <span class="string">`phoneCode`</span> <span class="string">`phone_code`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="string">'86'</span> <span class="keyword">COMMENT</span> <span class="string">'国际电话区号'</span>; <span class="comment">-- 修改 phoneCode 字段为 phone_code</span></span><br></pre></td></tr></table></figure><h4 id="在某个字段后面插入一个字段"><a href="#在某个字段后面插入一个字段" class="headerlink" title="在某个字段后面插入一个字段"></a>在某个字段后面插入一个字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">`wechat`</span> <span class="built_in">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'微信'</span> <span class="keyword">AFTER</span> <span class="string">`phone`</span>; <span class="comment">-- 在 phone 字段后添加一个 wechat 字段</span></span><br></pre></td></tr></table></figure><h4 id="多条语句连起来写-中端用逗号分隔开"><a href="#多条语句连起来写-中端用逗号分隔开" class="headerlink" title="多条语句连起来写,中端用逗号分隔开"></a>多条语句连起来写,中端用逗号分隔开</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span></span><br><span class="line"><span class="keyword">CHANGE</span> <span class="keyword">COLUMN</span> <span class="string">`phoneCode`</span> <span class="string">`phone_code`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="string">'86'</span> <span class="keyword">COMMENT</span> <span class="string">'国际电话区号'</span>, <span class="comment">-- 修改 phoneCode 字段为 phone_code</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">`wechat`</span> <span class="built_in">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'微信'</span> <span class="keyword">AFTER</span> <span class="string">`phone`</span>; <span class="comment">-- 在 phone 字段后添加一个 wechat 字段</span></span><br></pre></td></tr></table></figure><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="string">`t_user`</span>; <span class="comment">-- 删除 t_user 表</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;建表语句&quot;&gt;&lt;a href=&quot;#建表语句&quot; class=&quot;headerlink&quot; title=&quot;建表语句&quot;&gt;&lt;/a&gt;建表语句&lt;/h4&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://dawei.lv/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 在Shell中插入/更新的整数会变成浮点数</title>
    <link href="http://dawei.lv/2016/09/01/MongoDB-%E5%9C%A8Shell%E4%B8%AD%E6%8F%92%E5%85%A5-%E6%9B%B4%E6%96%B0%E7%9A%84%E6%95%B4%E6%95%B0%E4%BC%9A%E5%8F%98%E6%88%90%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    <id>http://dawei.lv/2016/09/01/MongoDB-在Shell中插入-更新的整数会变成浮点数/</id>
    <published>2016-09-01T05:55:04.000Z</published>
    <updated>2018-05-30T06:07:19.755Z</updated>
    
    <content type="html"><![CDATA[<p>从 shell 中更新/写入到文档的数字，会变为 float 类型</p><p>引用：“shell 中的数字都被 MongoDB 当作是双精度数。这意味着如果你从数据库中获得的是一个 32 位整数，修改文档后，将文档存回数据库的时候，这个整数也就被换成了浮点数，即便保持这个整数原封不动也会这样的。”</p><p>参考：《MongoDB 权威指南》第一版</p><blockquote><p>db.data.update({‘name’: ‘zero’}, {‘$set’: {‘value’: 0}})<br>db.data.findOne({‘name’: ‘zero})</p></blockquote><pre><code>{&apos;name&apos;: &apos;zero&apos;, &apos;value&apos;: 0.0}  </code></pre><p>db.data.update({‘name’: ‘zero’}, {‘$set’: {‘value’: NumberInt(0)}})</p><p><a href="http://stackoverflow.com/questions/8218484/mongodb-inserts-float-when-trying-to-insert-integer" target="_blank" rel="noopener">http://stackoverflow.com/questions/8218484/mongodb-inserts-float-when-trying-to-insert-integer</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从 shell 中更新/写入到文档的数字，会变为 float 类型&lt;/p&gt;
&lt;p&gt;引用：“shell 中的数字都被 MongoDB 当作是双精度数。这意味着如果你从数据库中获得的是一个 32 位整数，修改文档后，将文档存回数据库的时候，这个整数也就被换成了浮点数，即便保持这
      
    
    </summary>
    
    
      <category term="mongo" scheme="http://dawei.lv/tags/mongo/"/>
    
      <category term="shell" scheme="http://dawei.lv/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>bash 命令行常用快捷键整理</title>
    <link href="http://dawei.lv/2016/07/19/bash-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%95%B4%E7%90%86/"/>
    <id>http://dawei.lv/2016/07/19/bash-命令行常用快捷键整理/</id>
    <published>2016-07-18T16:04:37.000Z</published>
    <updated>2018-05-30T06:07:19.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编辑命令"><a href="#编辑命令" class="headerlink" title="编辑命令"></a>编辑命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>Ctrl + a</td><td>移到命令行首</td></tr><tr><td>Ctrl + e</td><td>移到命令行尾</td></tr><tr><td>Ctrl + f</td><td>按字符前移（右向）</td></tr><tr><td>Ctrl + b</td><td>按字符后移（左向）</td></tr><tr><td>Alt + f</td><td>按单词前移（右向）</td></tr><tr><td>Alt + b</td><td>按单词后移（左向）</td></tr><tr><td>Ctrl + xx</td><td>在命令行首和光标之间移动</td></tr><tr><td>Ctrl + u</td><td>从光标处删除至命令行首</td></tr><tr><td>Ctrl + k</td><td>从光标处删除至命令行尾</td></tr><tr><td>Ctrl + w</td><td>从光标处删除至字首</td></tr><tr><td>Alt + d</td><td>从光标处删除至字尾</td></tr><tr><td>Ctrl + d</td><td>删除光标处的字符</td></tr><tr><td>Ctrl + h</td><td>删除光标前的字符</td></tr><tr><td>Ctrl + y</td><td>粘贴至光标后</td></tr><tr><td>Alt + c</td><td>从光标处更改为首字母大写的单词</td></tr><tr><td>Alt + u</td><td>从光标处更改为全部大写的单词</td></tr><tr><td>Alt + l</td><td>从光标处更改为全部小写的单词</td></tr><tr><td>Ctrl + t</td><td>交换光标处和之前的字符</td></tr><tr><td>Alt + t</td><td>交换光标处和之前的单词</td></tr><tr><td>Alt + Backspace</td><td>与 Ctrl + w 类似，分隔符有些差别</td></tr><tr><td>Ctrl + r</td><td>逆向搜索命令历史</td></tr><tr><td>Ctrl + g</td><td>从历史搜索模式退出</td></tr><tr><td>Ctrl + p</td><td>历史中的上一条命令</td></tr><tr><td>Ctrl + n</td><td>历史中的下一条命令</td></tr><tr><td>Alt + .</td><td>使用上一条命令的最后一个参数</td></tr></tbody></table><h2 id="控制命令"><a href="#控制命令" class="headerlink" title="控制命令"></a>控制命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>Ctrl + l</td><td>清屏</td></tr><tr><td>Ctrl + o</td><td>执行当前命令，并选择上一条命令</td></tr><tr><td>Ctrl + s</td><td>阻止屏幕输出</td></tr><tr><td>Ctrl + q</td><td>允许屏幕输出</td></tr><tr><td>Ctrl + c</td><td>终止命令</td></tr><tr><td>Ctrl + z</td><td>挂起命令</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;编辑命令&quot;&gt;&lt;a href=&quot;#编辑命令&quot; class=&quot;headerlink&quot; title=&quot;编辑命令&quot;&gt;&lt;/a&gt;编辑命令&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbod
      
    
    </summary>
    
    
      <category term="shell" scheme="http://dawei.lv/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Linux 服务器首次快速配置</title>
    <link href="http://dawei.lv/2016/07/18/Linux-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%A6%96%E6%AC%A1%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/"/>
    <id>http://dawei.lv/2016/07/18/Linux-服务器首次快速配置/</id>
    <published>2016-07-18T15:57:03.000Z</published>
    <updated>2018-06-22T02:02:14.113Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>对应 linux 版本：Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-86-generic x86_64)</p></blockquote><p>拿到新云服务器后的快速配置方案，供参考。</p><a id="more"></a><h2 id="修改-root-默认密码"><a href="#修改-root-默认密码" class="headerlink" title="修改 root 默认密码"></a>修改 root 默认密码</h2><p>用 root 登录，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>提示输入新的密码，重复两次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter new UNIX password:</span><br><span class="line">Retype new UNIX password:</span><br></pre></td></tr></table></figure><p>看到下面的提示即表示修改成功了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd: password updated successfully</span><br></pre></td></tr></table></figure><h2 id="修改-ssh-默认端口号"><a href="#修改-ssh-默认端口号" class="headerlink" title="修改 ssh 默认端口号"></a>修改 ssh 默认端口号</h2><p>执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>将下面的 Port <code>22</code> 改为你想要设置的端口号（如 <code>2333</code>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Package generated configuration file</span></span><br><span class="line"><span class="comment"># See the sshd_config(5) manpage for details</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># What ports, IPs and protocols we listen for</span></span><br><span class="line">Port 22</span><br><span class="line"><span class="comment"># Use these options to restrict which interfaces/protocols sshd will bind to</span></span><br></pre></td></tr></table></figure><p>保存文件后，执行下面的命令重启 ssh 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><h3 id="验证-root-密码和端口号修改生效"><a href="#验证-root-密码和端口号修改生效" class="headerlink" title="验证 root 密码和端口号修改生效"></a>验证 root 密码和端口号修改生效</h3><p>执行命令退出服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>在客户端命令行中执行（其中 example.com 为你的服务器域名或 ip 地址）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2333 root@example.com</span><br></pre></td></tr></table></figure><p>输入刚刚设置的新密码，就能看到欢迎信息了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-86-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com/</span><br></pre></td></tr></table></figure><h3 id="ssh-保持连接（解决-Broken-pipe-的问题）"><a href="#ssh-保持连接（解决-Broken-pipe-的问题）" class="headerlink" title="ssh 保持连接（解决 Broken pipe 的问题）"></a>ssh 保持连接（解决 Broken pipe 的问题）</h3><p>有时候我们客户端长时间不操作，再去操作的时候就会半天没反应，等一会后提示 <code>broken pipe</code>，下面的是博主的解决方法。</p><h4 id="客户端设置"><a href="#客户端设置" class="headerlink" title="客户端设置"></a>客户端设置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>在最后添加两个参数</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TCPKeepAlive yes</span><br><span class="line">ServerAliveInterval <span class="number">300</span></span><br></pre></td></tr></table></figure><p>第二个参数表示每过 5 分钟发一个数据包到服务器表示“我还活着”。</p><h4 id="服务器端设置"><a href="#服务器端设置" class="headerlink" title="服务器端设置"></a>服务器端设置</h4><p>如果在客户端修改过 ssh 设置后还遇到 broken pipe 的问题，那么就把服务器端的设置也修改一下吧。执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>在最后增加一行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ClientAliveInterval <span class="number">60</span></span><br><span class="line">ClientAliveCountMax <span class="number">1</span></span><br></pre></td></tr></table></figure><p>作用是让 ssh server 发送“心跳”信号来维持持续连接。</p><h2 id="安装-mysql"><a href="#安装-mysql" class="headerlink" title="安装 mysql"></a>安装 mysql</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server mysql-client</span><br></pre></td></tr></table></figure><p>安装过程中两次输入密码</p><p>安装成功后执行命令，验证安装完成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>输入密码登录，后看到欢迎信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; or \g.</span><br><span class="line">Your MySQL connection id is 42</span><br><span class="line">Server version: 5.5.49-0ubuntu0.14.04.1 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type '<span class="keyword">help</span>;' or '\h' for help. <span class="keyword">Type</span> <span class="string">'\c'</span> <span class="keyword">to</span> <span class="keyword">clear</span> the <span class="keyword">current</span> <span class="keyword">input</span> statement.</span><br></pre></td></tr></table></figure><h3 id="mysql-设置外网访问权限"><a href="#mysql-设置外网访问权限" class="headerlink" title="mysql 设置外网访问权限"></a>mysql 设置外网访问权限</h3><p>执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure><p>找到 <code>bind-address =127.0.0.1</code> 注释掉，使得不再只允许本地访问</p><p>保存后执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>重新登录 mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br></pre></td></tr></table></figure><p>查询 host 值：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user,host from user;</span><br><span class="line">mysql&gt; update user set host='%' where user='root';</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h3 id="导出导入数据库"><a href="#导出导入数据库" class="headerlink" title="导出导入数据库"></a>导出导入数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p database_name &gt; dump.sql</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><p>提前建好库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p database_name &lt; dump.sql</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><h2 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -</span><br></pre></td></tr></table></figure><blockquote><p>如果提示未安装 curl，执行 <code>apt-get install curl</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><p>好了，到此我们的服务器的快速配置已经完成了。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;对应 linux 版本：Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-86-generic x86_64)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;拿到新云服务器后的快速配置方案，供参考。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://dawei.lv/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Mac 键盘按键符号对照，Mac 新手必看</title>
    <link href="http://dawei.lv/2016/07/18/Mac-%E9%94%AE%E7%9B%98%E6%8C%89%E9%94%AE%E7%AC%A6%E5%8F%B7%E5%AF%B9%E7%85%A7%EF%BC%8CMac-%E6%96%B0%E6%89%8B%E5%BF%85%E7%9C%8B/"/>
    <id>http://dawei.lv/2016/07/18/Mac-键盘按键符号对照，Mac-新手必看/</id>
    <published>2016-07-18T15:21:28.000Z</published>
    <updated>2018-05-30T06:07:19.755Z</updated>
    
    <content type="html"><![CDATA[<h4 id="先来看看我们最常用的五大修饰键"><a href="#先来看看我们最常用的五大修饰键" class="headerlink" title="先来看看我们最常用的五大修饰键"></a>先来看看我们最常用的五大修饰键</h4><ul><li>⌘ 对应按键 <kbd>Command</kbd> ，这个最好记，因为键盘上就有</li><li>⌥ 对应按键 <kbd>Option</kbd></li><li>⇪ 对应按键 <kbd>Caps Lock</kbd></li><li>⇧ 对应按键 <kbd>Shift</kbd></li><li>⌃ 对应按键 <kbd>Control</kbd></li></ul><blockquote><p>如果你用的是 Windows 标准键盘，请用 Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。</p></blockquote><h4 id="按键符号对照表"><a href="#按键符号对照表" class="headerlink" title="按键符号对照表"></a>按键符号对照表</h4><table><thead><tr><th>修饰键</th><th>符号</th></tr></thead><tbody><tr><td>Apple symbol</td><td></td></tr><tr><td>Command</td><td>⌘</td></tr><tr><td>Option (Alt, Alternative)</td><td>⌥</td></tr><tr><td>Caps Lock</td><td>⇪</td></tr><tr><td>Shift</td><td>⇧</td></tr><tr><td>Control</td><td>⌃</td></tr><tr><td>Return</td><td>↩</td></tr><tr><td>Forward Delete</td><td>⌦</td></tr><tr><td>Page Up</td><td>⇞</td></tr><tr><td>Page Down</td><td>⇟</td></tr><tr><td>Top (Home)</td><td>↖</td></tr><tr><td>End</td><td>↘</td></tr><tr><td>Tab Right</td><td>⇥</td></tr><tr><td>Tab Left</td><td>⇤</td></tr><tr><td>Eject</td><td>⏏</td></tr><tr><td>Escape (Esc)</td><td>⎋</td></tr></tbody></table><blockquote><p>试试 ⇧ + ⌥ + K （ <kbd>Shift</kbd> + <kbd>Option</kbd> + <kbd>K</kbd> ）会发生什么：）</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;先来看看我们最常用的五大修饰键&quot;&gt;&lt;a href=&quot;#先来看看我们最常用的五大修饰键&quot; class=&quot;headerlink&quot; title=&quot;先来看看我们最常用的五大修饰键&quot;&gt;&lt;/a&gt;先来看看我们最常用的五大修饰键&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;⌘ 对应按键 &lt;kbd&gt;
      
    
    </summary>
    
    
      <category term="mac" scheme="http://dawei.lv/tags/mac/"/>
    
  </entry>
  
</feed>
